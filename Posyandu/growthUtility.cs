using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace Posyandu.Utilities
{
    public class growthUtility
    {
        private Dictionary<int, (double Median, double PlusOneSD, double MinusOneSD)> growthDataHeightMale = new Dictionary<int, (double, double, double)>
        {
            {0, (49.9, 51.8, 48.0)},
            {1, (54.7, 56.7, 52.8)},
            {2, (58.4, 60.4, 56.4)},
            {3, (61.4, 63.5, 59.4)},
            {4, (64.0, 66.0, 61.8)},
            {5, (65.9, 68.0, 63.8)},
            {6, (67.6, 69.8, 65.5)},
            {7, (69.2, 71.3, 67.0)},
            {8, (70.6, 72.8, 68.4)},
            {9, (72.0, 74.2, 69.7)},
            {10, (73.3, 75.6, 71.0)},
            {11, (74.5, 76.9, 72.2)},
            {12, (75.7, 78.1, 73.4)},
            {13, (76.9, 79.3, 74.5)},
            {14, (78.0, 80.5, 75.6)},
            {15, (79.1, 81.7, 76.6)},
            {16, (80.2, 82.8, 77.6)},
            {17, (81.2, 83.9, 78.6)},
            {18, (82.3, 85.0, 79.6)},
            {19, (83.3, 86.0, 80.5)},
            {20, (84.2, 87.0, 81.4)},
            {21, (85.2, 88.0, 82.3)},
            {22, (86.1, 89.0, 83.0)},
            {23, (86.9, 89.9, 83.9)},
            {24, (87.1, 90.2, 84.1)},
            { 25, (88, 91.1, 84.9) },
            { 26, (88.8, 92, 85.6) },
            { 27, (89.6, 92.9, 86.4) },
            { 28, (90.4, 93.7, 87.1) },
            { 29, (91.2, 94.5, 87.8) },
            { 30, (91.9, 95.3, 88.5) },
            { 31, (92.7, 96.1, 89.2) },
            { 32, (93.4, 96.9, 89.9) },
            { 33, (94.1, 97.6, 90.5) },
            { 34, (94.1, 97.6, 91.1) },
            { 35, (95.4, 99.1, 91.8) },
            { 36, (96.1, 99.8, 92.4) },
            { 37, (96.7, 100.5, 93) },
            { 38, (97.4, 101.2, 93.6) },
            { 39, (98, 101.8, 94.2) },
            { 40, (98.6, 102.5, 94.7) },
            { 41, (99.2, 103.2, 95.3) },
            { 42, (99.9, 103.8, 95.9) },
            { 43, (100.4, 104.5, 96.4) },
            { 44, (101, 105.1, 97) },
            { 45, (101.6, 105.7, 97.5) },
            { 46, (102.2, 106.3, 98.1) },
            { 47, (102.8, 106.9, 98.6) },
            { 48, (103.3, 107.5, 99.1) },
            { 49, (103.9, 108.1, 99.7) },
            { 50, (104.4, 109.3, 100.2) },
            { 51, (105, 109.3, 100.7) },
            { 52, (105.6, 109.9, 101.2) },
            { 53, (106.1, 110.5, 101.7) },
            { 54, (106.7, 111.1, 102.3) },
            { 55, (107.2, 111.7, 102.8) },
            { 56, (107.8, 112.3, 103.3) },
            { 57, (108.3, 112.8, 103.8) },
            { 58, (108.9, 113.4, 104.3) },
            { 59, (109.4, 114.0, 104.8) },
            { 60, (110.0, 114.6, 105.3) }


        };

                private Dictionary<int, (double Median, double PlusOneSD, double MinusOneSD)> growthDataWeightMale = new Dictionary<int, (double, double, double)>
        {
            {0, (3.3, 3.9, 2.9)},
            {1, (4.5, 5.1, 3.9)},
            {2, (5.6, 6.3, 4.9)},
            {3, (6.4, 7.2, 5.7)},
            {4, (7.0, 7.8, 6.2)},
            {5, (7.5, 8.4, 6.7)},
            {6, (7.9, 8.8, 7.1)},
            {7, (8.3, 9.2, 7.4)},
            {8, (8.6, 9.6, 7.7)},
            {9, (8.9, 9.9, 8.0)},
            {10, (9.2, 10.2, 8.2)},
            {11, (9.4, 10.5, 8.4)},
            {12, (9.6, 10.8, 8.6)},
            {13, (9.9, 11.0, 8.8)},
            {14, (10.1, 11.3, 9.0)},
            {15, (10.3, 11.5, 9.2)},
            {16, (10.5, 11.7, 9.4)},
            {17, (10.7, 12.0, 9.6)},
            {18, (10.9, 12.2, 9.8)},
            {19, (11.1, 12.5, 10.0)},
            {20, (11.3, 12.7, 10.1)},
            {21, (11.5, 12.9, 10.3)},
            {22, (11.8, 13.2, 10.5)},
            {23, (12.0, 13.4, 10.7)},
            {24, (12.2, 13.6, 10.8)},
            {25, (12.4, 13.9, 11.0)},
            {26, (12.5, 14.1, 11.2)},
            {27, (12.7, 14.3, 11.3)},
            {28, (12.9, 14.5, 11.5)},
            {29, (13.1, 14.8, 11.7)},
            {30, (13.3, 15.0, 11.8)},
            {31, (13.5, 15.2, 12.0)},
            {32, (13.7, 15.4, 12.1)},
            {33, (13.8, 15.6, 12.3)},
            {34, (14.0, 15.8, 12.4)},
            {35, (14.2, 16.0, 12.6)},
            {36, (14.3, 16.2, 12.7)},
            {37, (14.5, 16.4, 12.9)},
            {38, (14.7, 16.6, 13.0)},
            {39, (14.8, 16.8, 13.1)},
            {40, (15.0, 17.0, 13.3)},
            {41, (15.2, 17.2, 13.4)},
            {42, (15.3, 17.4, 13.6)},
            {43, (15.5, 17.6, 13.7)},
            {44, (15.7, 17.8, 13.8)},
            {45, (15.8, 18.0, 14.0)},
            {46, (16.0, 18.2, 14.1)},
            {47, (16.2, 18.4, 14.3)},
            {48, (16.3, 18.6, 14.4)},
            {49, (16.5, 18.8, 14.5)},
            {50, (16.7, 19.0, 14.7)},
            {51, (16.8, 19.2, 14.8)},
            {52, (17.0, 19.4, 15.0)},
            {53, (17.2, 19.6, 15.1)},
            {54, (17.3, 19.8, 15.2)},
            {55, (17.5, 20.0, 15.4)},
            {56, (17.7, 20.2, 15.5)},
            {57, (17.8, 20.4, 15.6)},
            {58, (18.0, 20.6, 15.8)},
            {59, (18.2, 20.8, 15.9)},
            {60, (18.3, 21.0, 16.0)}
        };


        // Dictionary to store the growth data for females (perempuan)
        private Dictionary<int, (double Median, double PlusOneSD, double MinusOneSD)> growthDataFemaleHeight = new Dictionary<int, (double, double, double)>
        {
            // Data points for female growth
            { 0, (49.1, 51.0, 47.3) },
            { 1, (53.7, 55.6, 51.7) },
            { 2, (57.1, 59.1, 55.0) },
            { 3, (59.8, 61.9, 57.7) },
            { 4, (62.1, 64.3, 59.9) },
            { 5, (64.0, 66.2, 61.8) },
            { 6, (65.7, 68.0, 63.5) },
            { 7, (67.3, 69.6, 65.0) },
            { 8, (68.7, 71.1, 66.4) },
            { 9, (70.1, 72.6, 67.7) },
            { 10, (71.5, 73.9, 69.0) },
            { 11, (72.8, 75.3, 70.3) },
            { 12, (74.0, 76.6, 71.4) },
            { 13, (75.2, 77.8, 72.6) },
            { 14, (76.4, 79.1, 73.7) },
            { 15, (77.5, 80.2, 74.8) },
            { 16, (78.6, 81.4, 75.8) },
            { 17, (79.7, 82.5, 76.8) },
            { 18, (80.7, 83.6, 77.8) },
            { 19, (81.7, 84.7, 78.8) },
            { 20, (82.7, 85.7, 79.7) },
            { 21, (83.7, 86.7, 80.6) },
            { 22, (84.6, 87.7, 81.5) },
            { 23, (85.5, 88.7, 82.3) },
            { 24, (86.4, 89.6, 83.2) },
            { 25, (86.6, 89.9, 83.3) },
            { 26, (87.4, 90.8, 84.1) },
            { 27, (88.3, 91.7, 84.9) },
            { 28, (89.1, 92.5, 85.7) },
            { 29, (89.9, 93.4, 86.4) },
            { 30, (90.7, 94.2, 87.1) },
            { 31, (91.4, 95.0, 87.9) },
            { 32, (92.2, 95.8, 88.6) },
            { 33, (92.9, 96.6, 89.3) },
            { 34, (93.6, 97.4, 89.9) },
            { 35, (94.4, 98.1, 90.6) },
            { 36, (95.1, 98.9, 91.2) },
            { 37, (95.7, 99.6, 91.9) },
            { 38, (96.4, 100.3, 92.5) },
            { 39, (97.1, 101.0, 93.1) },
            { 40, (97.7, 101.7, 93.8) },
            { 41, (98.4, 102.4, 94.4) },
            { 42, (99.0, 103.1, 95.0) },
            { 43, (99.7, 103.8, 95.6) },
            { 44, (100.3, 104.5, 96.2) },
            { 45, (100.9, 105.1, 96.7) },
            { 46, (101.5, 105.8, 97.3) },
            { 47, (102.1, 106.4, 97.9) },
            { 48, (102.7, 107.0, 98.4) },
            { 49, (103.3, 107.7, 99.0) },
            { 50, (103.9, 108.3, 99.5) },
            { 51, (104.5, 108.9, 100.1) },
            { 52, (105.0, 109.5, 100.6) },
            { 53, (105.6, 110.1, 101.1) },
            { 54, (106.2, 110.7, 101.6) },
            { 55, (106.7, 111.3, 102.2) },
            { 56, (107.3, 111.9, 102.7) },
            { 57, (107.8, 112.5, 103.2) },
            { 58, (108.4, 113.0, 103.7) },
            { 59, (108.9, 113.6, 104.2) },
            { 60, (109.4, 114.2, 104.7) }
            // Add more data points as needed
        };

        private Dictionary<int, (double MinusTwoSD, double Median, double PlusTwoSD)> growthDataFemaleWeight = new Dictionary<int, (double, double, double)>
        {
            { 0, (2.4, 3.2, 4.2) },
            { 1, (3.2, 4.2, 5.5) },
            { 2, (3.9, 5.1, 6.6) },
            { 3, (4.5, 5.8, 7.5) },
            { 4, (5.0, 6.4, 8.2) },
            { 5, (5.4, 6.9, 8.8) },
            { 6, (5.7, 7.3, 9.3) },
            { 7, (6.0, 7.6, 9.8) },
            { 8, (6.3, 7.9, 10.2) },
            { 9, (6.5, 8.2, 10.5) },
            { 10, (6.7, 8.5, 10.9) },
            { 11, (6.9, 8.7, 11.2) },
            { 12, (7.0, 8.9, 11.5) },
            { 13, (7.2, 9.2, 11.8) },
            { 14, (7.4, 9.4, 12.1) },
            { 15, (7.6, 9.6, 12.4) },
            { 16, (7.7, 9.8, 12.6) },
            { 17, (7.9, 10.0, 12.9) },
            { 18, (8.1, 10.2, 13.2) },
            { 19, (8.2, 10.4, 13.5) },
            { 20, (8.4, 10.6, 13.7) },
            { 21, (8.6, 10.9, 14.0) },
            { 22, (8.7, 11.1, 14.3) },
            { 23, (8.9, 11.3, 14.6) },
            { 24, (9.0, 11.5, 14.8) },
            { 25, (9.2, 11.7, 15.1) },
            { 26, (9.4, 11.9, 15.4) },
            { 27, (9.5, 12.1, 15.7) },
            { 28, (9.7, 12.3, 16.0) },
            { 29, (9.8, 12.5, 16.2) },
            { 30, (10.0, 12.7, 16.5) },
            { 31, (10.1, 12.9, 16.8) },
            { 32, (10.3, 13.1, 17.1) },
            { 33, (10.4, 13.3, 17.3) },
            { 34, (10.5, 13.5, 17.6) },
            { 35, (10.7, 13.7, 17.9) },
            { 36, (10.8, 13.9, 18.1) },
            { 37, (10.9, 14.0, 18.4) },
            { 38, (11.1, 14.2, 18.7) },
            { 39, (11.2, 14.4, 19.0) },
            { 40, (11.3, 14.6, 19.2) },
            { 41, (11.5, 14.8, 19.5) },
            { 42, (11.6, 15.0, 19.8) },
            { 43, (11.7, 15.2, 20.1) },
            { 44, (11.8, 15.3, 20.4) },
            { 45, (12.0, 15.5, 20.7) },
            { 46, (12.1, 15.7, 20.9) },
            { 47, (12.2, 15.9, 21.2) },
            { 48, (12.3, 16.1, 21.5) },
            { 49, (12.4, 16.3, 21.8) },
            { 50, (12.6, 16.4, 22.1) },
            { 51, (12.7, 16.6, 22.4) },
            { 52, (12.8, 16.8, 22.6) },
            { 53, (12.9, 17.0, 22.9) },
            { 54, (13.0, 17.2, 23.2) },
            { 55, (13.2, 17.3, 23.5) },
            { 56, (13.3, 17.5, 23.8) },
            { 57, (13.4, 17.7, 24.1) },
            { 58, (13.5, 17.9, 24.4) },
            { 59, (13.6, 18.0, 24.6) },
            { 60, (13.7, 18.2, 24.9) }
        };
        public (double? zScore, string classification) CalculateZScoreAndClassificationHeight(int ageMonths, double height, string gender)
        {
            Dictionary<int, (double, double, double)> selectedGrowthData = gender == "laki-laki" ? growthDataHeightMale : growthDataFemaleHeight;

            if (selectedGrowthData.ContainsKey(ageMonths))
            {
                var (median, plusOneSD, minusOneSD) = selectedGrowthData[ageMonths];
                double sd = (plusOneSD - minusOneSD) / 2;
                double zScore = (height - median) / sd;

                string classification;
                if (zScore < -3)
                {
                    classification = "Sangat pendek (very short)";
                }
                else if (zScore >= -3 && zScore < -2)
                {
                    classification = "Pendek (short)";
                }
                else if (zScore >= -2 && zScore <= 3)
                {
                    classification = "Normal";
                }
                else
                {
                    classification = "Tinggi (tall)";
                }

                return (zScore, classification);
            }
            else
            {
                return (null, "Age not in range");
            }
        }

        public (double? zScore, string classification) CalculateZScoreAndClassificationWeight(int ageMonths, double weight, string gender)
        {
            Dictionary<int, (double, double, double)> selectedGrowthData = gender == "laki-laki" ? growthDataWeightMale : growthDataFemaleWeight;

            if (selectedGrowthData.ContainsKey(ageMonths))
            {
                var (median, plusOneSD, minusOneSD) = selectedGrowthData[ageMonths];
                double sd = (plusOneSD - minusOneSD) / 2;
                double zScore = (weight - median) / sd;

                string classification;
                if (zScore < -3)
                {
                    classification = "Berat badan sangat kurang";
                }
                else if (zScore >= -3 && zScore < -2)
                {
                    classification = "berat badan kurang";
                }
                else if (zScore >= -2 && zScore <= 3)
                {
                    classification = "Normal";
                }
                else
                {
                    classification = "berat badan lebih";
                }

                return (zScore, classification);
            }
            else
            {
                return (null, "Age not in range");
            }
        }
    }
}