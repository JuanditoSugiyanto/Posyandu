using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace Posyandu.Utilities
{
    public class growthUtility
    {
        private Dictionary<int, (double Median, double PlusOneSD, double MinusOneSD)> growthDataMale = new Dictionary<int, (double, double, double)>
        {
            {0, (49.9, 51.8, 48.0)},
            {1, (54.7, 56.7, 52.8)},
            {2, (58.4, 60.4, 56.4)},
            {3, (61.4, 63.5, 59.4)},
            {4, (64.0, 66.0, 61.8)},
            {5, (65.9, 68.0, 63.8)},
            {6, (67.6, 69.8, 65.5)},
            {7, (69.2, 71.3, 67.0)},
            {8, (70.6, 72.8, 68.4)},
            {9, (72.0, 74.2, 69.7)},
            {10, (73.3, 75.6, 71.0)},
            {11, (74.5, 76.9, 72.2)},
            {12, (75.7, 78.1, 73.4)},
            {13, (76.9, 79.3, 74.5)},
            {14, (78.0, 80.5, 75.6)},
            {15, (79.1, 81.7, 76.6)},
            {16, (80.2, 82.8, 77.6)},
            {17, (81.2, 83.9, 78.6)},
            {18, (82.3, 85.0, 79.6)},
            {19, (83.3, 86.0, 80.5)},
            {20, (84.2, 87.0, 81.4)},
            {21, (85.2, 88.0, 82.3)},
            {22, (86.1, 89.0, 83.0)},
            {23, (86.9, 89.9, 83.9)},
            {24, (87.1, 90.2, 84.1)},
            { 25, (88, 91.1, 84.9) },
            { 26, (88.8, 92, 85.6) },
            { 27, (89.6, 92.9, 86.4) },
            { 28, (90.4, 93.7, 87.1) },
            { 29, (91.2, 94.5, 87.8) },
            { 30, (91.9, 95.3, 88.5) },
            { 31, (92.7, 96.1, 89.2) },
            { 32, (93.4, 96.9, 89.9) },
            { 33, (94.1, 97.6, 90.5) },
            { 34, (94.1, 97.6, 91.1) },
            { 35, (95.4, 99.1, 91.8) },
            { 36, (96.1, 99.8, 92.4) },
            { 37, (96.7, 100.5, 93) },
            { 38, (97.4, 101.2, 93.6) },
            { 39, (98, 101.8, 94.2) },
            { 40, (98.6, 102.5, 94.7) },
            { 41, (99.2, 103.2, 95.3) },
            { 42, (99.9, 103.8, 95.9) },
            { 43, (100.4, 104.5, 96.4) },
            { 44, (101, 105.1, 97) },
            { 45, (101.6, 105.7, 97.5) },
            { 46, (102.2, 106.3, 98.1) },
            { 47, (102.8, 106.9, 98.6) },
            { 48, (103.3, 107.5, 99.1) },
            { 49, (103.9, 108.1, 99.7) },
            { 50, (104.4, 109.3, 100.2) },
            { 51, (105, 109.3, 100.7) },
            { 52, (105.6, 109.9, 101.2) },
            { 53, (106.1, 110.5, 101.7) },
            { 54, (106.7, 111.1, 102.3) },
            { 55, (107.2, 111.7, 102.8) },
            { 56, (107.8, 112.3, 103.3) },
            { 57, (108.3, 112.8, 103.8) },
            { 58, (108.9, 113.4, 104.3) },
            { 59, (109.4, 114.0, 104.8) },
            { 60, (110.0, 114.6, 105.3) }


        };

        // Dictionary to store the growth data for females (perempuan)
        private Dictionary<int, (double Median, double PlusOneSD, double MinusOneSD)> growthDataFemale = new Dictionary<int, (double, double, double)>
        {
            // Data points for female growth
            { 0, (49.1, 51.0, 47.3) },
            { 1, (53.7, 55.6, 51.7) },
            { 2, (57.1, 59.1, 55.0) },
            { 3, (59.8, 61.9, 57.7) },
            { 4, (62.1, 64.3, 59.9) },
            { 5, (64.0, 66.2, 61.8) },
            { 6, (65.7, 68.0, 63.5) },
            { 7, (67.3, 69.6, 65.0) },
            { 8, (68.7, 71.1, 66.4) },
            { 9, (70.1, 72.6, 67.7) },
            { 10, (71.5, 73.9, 69.0) },
            { 11, (72.8, 75.3, 70.3) },
            { 12, (74.0, 76.6, 71.4) },
            { 13, (75.2, 77.8, 72.6) },
            { 14, (76.4, 79.1, 73.7) },
            { 15, (77.5, 80.2, 74.8) },
            { 16, (78.6, 81.4, 75.8) },
            { 17, (79.7, 82.5, 76.8) },
            { 18, (80.7, 83.6, 77.8) },
            { 19, (81.7, 84.7, 78.8) },
            { 20, (82.7, 85.7, 79.7) },
            { 21, (83.7, 86.7, 80.6) },
            { 22, (84.6, 87.7, 81.5) },
            { 23, (85.5, 88.7, 82.3) },
            { 24, (86.4, 89.6, 83.2) },
            { 25, (86.6, 89.9, 83.3) },
            { 26, (87.4, 90.8, 84.1) },
            { 27, (88.3, 91.7, 84.9) },
            { 28, (89.1, 92.5, 85.7) },
            { 29, (89.9, 93.4, 86.4) },
            { 30, (90.7, 94.2, 87.1) },
            { 31, (91.4, 95.0, 87.9) },
            { 32, (92.2, 95.8, 88.6) },
            { 33, (92.9, 96.6, 89.3) },
            { 34, (93.6, 97.4, 89.9) },
            { 35, (94.4, 98.1, 90.6) },
            { 36, (95.1, 98.9, 91.2) },
            { 37, (95.7, 99.6, 91.9) },
            { 38, (96.4, 100.3, 92.5) },
            { 39, (97.1, 101.0, 93.1) },
            { 40, (97.7, 101.7, 93.8) },
            { 41, (98.4, 102.4, 94.4) },
            { 42, (99.0, 103.1, 95.0) },
            { 43, (99.7, 103.8, 95.6) },
            { 44, (100.3, 104.5, 96.2) },
            { 45, (100.9, 105.1, 96.7) },
            { 46, (101.5, 105.8, 97.3) },
            { 47, (102.1, 106.4, 97.9) },
            { 48, (102.7, 107.0, 98.4) },
            { 49, (103.3, 107.7, 99.0) },
            { 50, (103.9, 108.3, 99.5) },
            { 51, (104.5, 108.9, 100.1) },
            { 52, (105.0, 109.5, 100.6) },
            { 53, (105.6, 110.1, 101.1) },
            { 54, (106.2, 110.7, 101.6) },
            { 55, (106.7, 111.3, 102.2) },
            { 56, (107.3, 111.9, 102.7) },
            { 57, (107.8, 112.5, 103.2) },
            { 58, (108.4, 113.0, 103.7) },
            { 59, (108.9, 113.6, 104.2) },
            { 60, (109.4, 114.2, 104.7) }
            // Add more data points as needed
        };
        public (double? zScore, string classification) CalculateZScoreAndClassification(int ageMonths, double height, string gender)
        {
            Dictionary<int, (double, double, double)> selectedGrowthData = gender == "laki-laki" ? growthDataMale : growthDataFemale;

            if (selectedGrowthData.ContainsKey(ageMonths))
            {
                var (median, plusOneSD, minusOneSD) = selectedGrowthData[ageMonths];
                double sd = (plusOneSD - minusOneSD) / 2;
                double zScore = (height - median) / sd;

                string classification;
                if (zScore < -3)
                {
                    classification = "Sangat pendek (very short)";
                }
                else if (zScore >= -3 && zScore < -2)
                {
                    classification = "Pendek (short)";
                }
                else if (zScore >= -2 && zScore <= 3)
                {
                    classification = "Normal";
                }
                else
                {
                    classification = "Tinggi (tall)";
                }

                return (zScore, classification);
            }
            else
            {
                return (null, "Age not in range");
            }
        }
    }
}